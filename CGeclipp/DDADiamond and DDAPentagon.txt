package third;
import java.awt.*;
import javax.swing.*;

public class DDADiamond extends JPanel {
    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        g.setColor(Color.RED);
        
        int[] x = {200, 300, 200, 100};
        int[] y = {100, 200, 300, 200};

        for (int i = 0; i < x.length; i++) {
            drawDDA(g, x[i], y[i], x[(i + 1) % x.length], y[(i + 1) % x.length]);
        }
    }

    public void drawDDA(Graphics g, int x1, int y1, int x2, int y2) {
        int dx = x2 - x1, dy = y2 - y1;
        int steps = Math.max(Math.abs(dx), Math.abs(dy));

        float x_inc = (float) dx / steps;
        float y_inc = (float) dy / steps;
        float x = x1, y = y1;

        for (int i = 0; i <= steps; i++) {
            g.fillRect(Math.round(x), Math.round(y), 2, 2);
            x += x_inc;
            y += y_inc;
        }
    }

    public static void main(String[] args) {
        JFrame frame = new JFrame("Diamond using DDA Algorithm");
        DDADiamond panel = new DDADiamond();
        frame.add(panel);
        frame.setSize(500, 500);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setVisible(true);
    }
}

====================

package third;
import java.awt.*;
import javax.swing.*;

public class DDAPentagon extends JPanel {
    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        g.setColor(Color.YELLOW);
        
        int[] x = {150, 250, 300, 200, 100};
        int[] y = {100, 100, 200, 300, 200};

        for (int i = 0; i < x.length; i++) {
            drawDDA(g, x[i], y[i], x[(i + 1) % x.length], y[(i + 1) % x.length]);
        }
    }

    public void drawDDA(Graphics g, int x1, int y1, int x2, int y2) {
        int dx = x2 - x1, dy = y2 - y1;
        int steps = Math.max(Math.abs(dx), Math.abs(dy));

        float x_inc = (float) dx / steps;
        float y_inc = (float) dy / steps;
        float x = x1, y = y1;

        for (int i = 0; i <= steps; i++) {
            g.fillRect(Math.round(x), Math.round(y), 2, 2);
            x += x_inc;
            y += y_inc;
        }
    }

    public static void main(String[] args) {
        JFrame frame = new JFrame("Pentagon using DDA Algorithm");
        DDAPentagon panel = new DDAPentagon();
        frame.add(panel);
        frame.setSize(500, 500);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setVisible(true);
    }
}
